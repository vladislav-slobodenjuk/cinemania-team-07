{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,4CCAA,IAAAC,EAAAD,EAAA,S,2CAQAE,OAAOC,iBAAiB,mBAAoBC,GAC5CF,OAAOC,iBAAiB,SAAUE,EAAAC,EAAA,CAASF,EAAkB,MAE7D,MAAMG,EAAaC,SAASC,cAAc,eACpCC,EAAWF,SAASC,cAAc,iBAClCE,EAAc,ICbb,MACLC,cACEC,KAAKC,WAAa,KAClBD,KAAKE,cAAgB,I,CAGvBC,mBACE,MAAMC,EAAcf,OAAOgB,WAC3BL,KAAKM,gBACLN,KAAKE,cAAgBE,EAAc,IAAM,EAAI,C,CAG/CE,gBACEN,KAAKC,WAAaD,KAAKE,a,GDEpBK,eAAehB,IAGpB,GAFAO,EAAYK,mBAERL,EAAYG,aAAeH,EAAYI,cAAe,OAE1D,MAAMM,EAAYV,EAAYI,cAC9B,IACE,MACMO,SADa,EAAAC,EAAAC,mBACAC,QAAQC,MAAM,EAAGL,GAC9BM,GAAS,EAAA1B,EAAA2B,cAAaN,IAE5B,EAAArB,EAAA4B,cAAatB,EAAYoB,GAEzBjB,EAASP,iBAAiB,SAAS2B,IAAA,G,CAMnC,MAAOC,IACP,EAAAC,EAAAC,SAAQF,E,EEnCZzB,EAAAN,EAAA,aCAAkC,EAAAlC,EAAA,S,aAIA,MAAMmC,EAAoBD,EAAAE,QAAMC,OAAO,CACrCC,QAAS,8CAETC,QAAS,CAAEC,cAAe,UAAUC,EAAAC,gBAG/BtB,eAAeuB,IAGpB,aAFuBR,EAAkBS,OAEzBC,KAAKpB,O,CCbvB,IAAAqB,EAAA9C,EAAA,S,0BAIO,SAAS+C,EAAsBC,GACpC,MAAMC,cACJA,EAAaC,YACbA,EAAWC,MACXA,EAAKC,aACLA,EAAYC,WACZA,EAAUC,WACVA,EAAUC,aACVA,EAAYC,UACZA,EAASC,SACTA,EAAQC,GACRA,GACEV,EAEEW,GAAU,EAAAb,EAAAc,mBAAkBnB,EAAAoB,YAAaH,GAGzCI,EAAeH,EAAU,SAAW,MACpCI,EAAUJ,EAAU,yBAA2B,oBAmBrD,MAAO,+KAjBSzD,OAAO8D,OAAOC,MAAQ,IAAMf,EAAcD,0BAsBvCE,uNAOwBA,iRA5BnBC,EAAac,WAAW,IAAK,qPAsCRX,+EAEAD,wMAvCnB,EAAAR,EAAAqB,YAAWd,2KAStB,EAAAtD,EAAAqE,gBACbZ,EACAa,KAAKC,MAAMC,aAAaC,QAAQ,gMA0CSf,8DACSC,iBAAkBI,KAAgBC,8B,CChFjF,SAASU,GAAkBvB,YAAEA,EAAWD,cAAEA,EAAaE,MAAEA,IAO3CjD,OAAOwE,WAAW,sBAArC,MAIMC,EAAMnE,SAASC,cAAc,uBACnC,IAAKkE,EAAK,OAAOC,QAAQC,IAAI,uBAE7B,MAAMC,EAAa,sCAAsC5B,IACnD6B,EAAe,sCAAsC9B,IAE3D,OAAI/C,OAAO8D,OAAOC,MAAQ,KAAOU,EAAIK,MAAQF,EACnCH,EAAIK,IAAMF,EAGhB5E,OAAO8D,OAAOC,OAAS,KAAOU,EAAIK,MAAQD,EACpCJ,EAAIK,IAAMD,OADpB,C,cHdF,MAAME,EAAazE,SAASC,cAAc,kBAE1CP,OAAOC,iBAAiB,oBAExBiB,iBACE,IACE,MAAM8D,QAAuBvC,IACvBwC,GAAc,EAAArC,EAAAsC,eAAcF,IAsBtC,SAAwBvD,EAAS,IAC/BsD,EAAWI,UAAY1D,C,CAlBrB2D,CAFevC,EAAsBoC,IAKrC,MAAMI,EAAsBlF,EAAAC,EAAA,EAC1B,IAAMmE,EAAkBU,IACxB,KAGFjF,OAAOC,iBAAiB,SAAUoF,E,CAElC,MAAOxD,GACP6C,QAAQ7C,MAAM,SAAUA,E,4BH7B5B,EAAAhC,EAAAyF","sources":["src/index.js","src/javascript/weekly-trends/weekly-trends-main.js","src/javascript/weekly-trends/card-handler.js","src/javascript/upcoming/upcoming.js","src/javascript/upcoming/api-service.js","src/javascript/upcoming/create-upcoming-markup.js","src/javascript/upcoming/img-handler.js"],"sourcesContent":["import { getGenres } from './javascript/weekly-trends/weekly-trends-genres';\ngetGenres();\n\nimport './javascript/loader';\nimport './javascript/stars-rating';\nimport './javascript/header/header';\nimport './javascript/hero/hero';\nimport './javascript/weekly-trends/weekly-trends-main';\nimport './javascript/upcoming/upcoming';\n// import './javascript/modal/modal-trailer';\n// import './javascript/modal/handleModal';\nimport './javascript/global-listener';\nimport './javascript/scroll-up';\n","import { createMarkup, insertMarkup } from './weekly-trends-markup.js';\nimport debounce from 'lodash.debounce';\nimport { onError } from './on-error.js';\nimport { CardHandler } from './card-handler.js';\nimport { getTrendyFilms } from '../api-service/api-service.js';\n// import { openModalAboutFilm } from '../modal/movieModal.js';\n// import modalInit from '../modal/modalInit.js';\n\nwindow.addEventListener('DOMContentLoaded', showWeeklyTrends);\nwindow.addEventListener('resize', debounce(showWeeklyTrends, 200));\n\nconst inputPlace = document.querySelector('.cards-list');\nconst filmList = document.querySelector('.listListener');\nconst cardHandler = new CardHandler();\n\nexport async function showWeeklyTrends() {\n  cardHandler.setCurrentAmount();\n\n  if (cardHandler.prevAmount === cardHandler.currentAmount) return;\n\n  const numMovies = cardHandler.currentAmount;\n  try {\n    const data = await getTrendyFilms();\n    const films = data.results.slice(0, numMovies);\n    const markup = createMarkup(films);\n    //insert markup\n    insertMarkup(inputPlace, markup);\n    //add listeners\n    filmList.addEventListener('click', event => {\n      // const li = event.target.closest('.card-item');\n      // const movieId = li.getAttribute('data-id');\n      // openModalAboutFilm(movieId);\n      // modalInit(event.target.closest('.card-item').getAttribute('data-id'));\n    });\n  } catch (error) {\n    onError(error);\n  }\n}\n","export class CardHandler {\n  constructor() {\n    this.prevAmount = null;\n    this.currentAmount = null;\n  }\n\n  setCurrentAmount() {\n    const screenWidth = window.innerWidth;\n    this.setPrevAmount();\n    this.currentAmount = screenWidth < 768 ? 1 : 3;\n  }\n\n  setPrevAmount() {\n    this.prevAmount = this.currentAmount;\n  }\n}\n","import debounce from 'lodash.debounce';\nimport { getUpcomingMovies } from './api-service';\nimport { careateUpcomingMarkup } from './create-upcoming-markup';\nimport { handleUpcomingImg } from './img-handler';\nimport { getRandomItem } from './helpers';\n// import defaultImg from '../images/logo.png';\n\nconst upcomingEl = document.querySelector('.upcoming-card');\n\nwindow.addEventListener('DOMContentLoaded', handleUpcoming);\n\nasync function handleUpcoming() {\n  try {\n    const upcomingMovies = await getUpcomingMovies();\n    const randomMovie = getRandomItem(upcomingMovies);\n    // console.log(randomMovie);\n    \n    const markup = careateUpcomingMarkup(randomMovie);\n    \n    updateUpcoming(markup);\n    // handleUpcomingImg(randomMovie);\n\n    const debouncedImgHandler = debounce(\n      () => handleUpcomingImg(randomMovie),\n      200\n    );\n\n    window.addEventListener('resize', debouncedImgHandler);\n    //\n  } catch (error) {\n    console.error('error:', error);\n    // updateUpcoming(failMarkup)\n    ('ERR_BAD_REQUEST');\n  }\n}\n\nfunction updateUpcoming(markup = '') {\n  upcomingEl.innerHTML = markup;\n}\n\n\n","import axios from 'axios';\n// import { API_KEY } from '../fetch/api_keys';\nimport { API_BAERER } from '../api-service/api_keys';\n\nconst upcomingMoviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/movie/upcoming',\n  // params: { language: 'en-US', page: '1', region: 'UA' },\n  headers: { Authorization: `Bearer ${API_BAERER}` },\n});\n\nexport async function getUpcomingMovies() {\n  const response = await upcomingMoviesApi.get();\n  // console.log(response);\n  return response.data.results;\n}\n","import { roundToTen, findFilmAtStorage } from './helpers';\nimport { STORAGE_KEY } from '../api-service/api_keys';\nimport { validateGenres } from '../weekly-trends/weekly-trends-genres';\n\nexport function careateUpcomingMarkup(film) {\n  const {\n    backdrop_path,\n    poster_path,\n    title,\n    release_date,\n    popularity,\n    vote_count,\n    vote_average,\n    genre_ids,\n    overview,\n    id,\n  } = film;\n\n  const isSaved = findFilmAtStorage(STORAGE_KEY, id);\n  // console.log('myIsSaved', isSaved);\n\n  const btnAttribute = isSaved ? 'remove' : 'add';\n  const btnText = isSaved ? 'Remove from my library' : 'Add to my library';\n  //\n  const imgPath = window.screen.width < 768 ? poster_path : backdrop_path;\n  const transformedDate = release_date.replaceAll('-', '.');\n  const roundedPopularity = roundToTen(popularity);\n\n  // const trimedGenres = trimGenreList(['comedy', 'action', 'thriller']);\n\n  // function trimGenreList(genres) {\n  //   if (genres.length > 2) return `${genres.slice(0, 2).join(', ')}, ...`;\n  //   else return `${genres.join(', ')}`;\n  // }\n\n  const genres = validateGenres(\n    genre_ids,\n    JSON.parse(localStorage.getItem('genres'))\n  );\n  //console.log(genres);\n\n  return `\n        <div class='upcoming-card__figure'>\n          <div class='upcoming-card__layout'></div>\n            <img\n              src=\"https://image.tmdb.org/t/p/original${imgPath}\"\n              alt=\"${title}\"\n              loading='lazy'\n              class='upcoming-card__img'\n            > \n          </div>\n        </div>\n        <div class='upcoming-card__body'>\n          <h3 class=\"upcoming-card__title\">${title}</h3>\n          <div class='metrics-list__main-container'>\n            <ul class=\"list metrics-list\">\n              <li class=\"metrics-list__item\">\n                <p class=\"metrics-text\">Release date</p>\n                <p class=\"metrics-text metrics-text--date\">${transformedDate}</p>\n              </li>\n              <li class=\"metrics-list__item\">\n                <p class=\"metrics-text\">Vote / Votes</p>\n                <p class=\"metrics-text metrics-text--vote\">\n                  <span class=\"vote-wrapper\">${vote_average}</span>\n                  /\n                  <span class=\"vote-wrapper\">${vote_count}</span>\n                </p>\n              </li>\n              <li class=\"metrics-list__item\">\n                <p class=\"metrics-text\">Popularity</p>\n                <p class=\"metrics-text\">${roundedPopularity}</p>\n              </li>\n              <li class=\"metrics-list__item\">\n                <p class=\"metrics-text\">Genre</p>\n                <p class=\"metrics-text\">${genres}</p>\n              </li>\n            </ul>\n          </div>\n          <h4 class=\"upcoming-card__subtitle metrics-text\">ABOUT</h4>\n            <p class=\"upcoming-card__text\">${overview}</p>\n          <button class=\"btn\" type=\"button\" data-id=${id} data-action=${btnAttribute}>${btnText}</button>\n\n        </div>`;\n}\n\n// <button class=\"css-btn-trailer watch-trailer-button\" type=\"button\" data-id=${id} data-trailer>Watch Trailer</button>\n","export function handleUpcomingImg({ poster_path, backdrop_path, title }) {\n  // const imgContainerEl = document.querySelector('.upcoming-card__figure');\n  // if (!imgContainerEl) return console.log('no upcoming section');\n\n  // const imgIsPresent = imgContainerEl.firstElementChild?.nodeName === 'IMG';\n  // console.log(imgIsPresent);\n\n  const mediaWidth = window.matchMedia('(max-width: 767px)');\n  // mediaWidth.onchange(() => console.log('change media'));\n  // console.log(mediaWidth);\n\n  const img = document.querySelector('.upcoming-card__img');\n  if (!img) return console.log('no upcoming section');\n\n  const posterLink = `https://image.tmdb.org/t/p/original${poster_path}`;\n  const backdropLink = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n\n  if (window.screen.width < 768 && img.src !== posterLink) {\n    return (img.src = posterLink);\n  }\n\n  if (window.screen.width >= 768 && img.src !== backdropLink) {\n    return (img.src = backdropLink);\n  }\n\n  // if (imgIsPresent && !mediaWidth.matches) {\n  //   clearElement(imgContainerEl);\n  // }\n\n  // if (imgIsPresent) return;\n\n  // if (mediaWidth.matches) {\n  //   const img = document.createElement('img');\n\n  //   const link = poster_path\n  //     ? `https://image.tmdb.org/t/p/original${poster_path}`\n  //     : defaultImg;\n\n  //   img.src = link;\n  //   img.alt = title;\n  //   img.loading = 'lazy';\n  //   img.classList.add('upcoming-card__poster');\n\n  //   console.log(img);\n  //   imgContainerEl.append(img);\n  // }\n}\n\nfunction checkMedia(url) {\n  x = window.matchMedia('(max-width: 767px)');\n  if (x.matches) return console.log(url);\n  console.log('more');\n}\n"],"names":["$7q8W2","parcelRequire","$l4dXb","window","addEventListener","$8dd91e1db91bc8cd$export$1c9ed5068c665f97","$parcel$interopDefault","$50Kfe","$8dd91e1db91bc8cd$var$inputPlace","document","querySelector","$8dd91e1db91bc8cd$var$filmList","$8dd91e1db91bc8cd$var$cardHandler","constructor","this","prevAmount","currentAmount","setCurrentAmount","screenWidth","innerWidth","setPrevAmount","async","numMovies","films","$960Ad","getTrendyFilms","results","slice","markup","createMarkup","insertMarkup","event","error","$dyriS","onError","$2shzp","$c0ae039946817b26$var$upcomingMoviesApi","default","create","baseURL","headers","Authorization","$3H7OR","API_BAERER","$c0ae039946817b26$export$577747a77907970f","get","data","$9CwBA","$d6b194e58b7e101f$export$f4becdac8252a1ad","film","backdrop_path","poster_path","title","release_date","popularity","vote_count","vote_average","genre_ids","overview","id","isSaved","findFilmAtStorage","STORAGE_KEY","btnAttribute","btnText","screen","width","replaceAll","roundToTen","validateGenres","JSON","parse","localStorage","getItem","$c7a6d7b01ca774b8$export$f5a341b7ca0be7a","matchMedia","img","console","log","posterLink","backdropLink","src","$23f92ba5ba178ecf$var$upcomingEl","upcomingMovies","randomMovie","getRandomItem","innerHTML","$23f92ba5ba178ecf$var$updateUpcoming","debouncedImgHandler","getGenres"],"version":3,"file":"index.aec99f02.js.map"}