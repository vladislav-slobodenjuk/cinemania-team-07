function t(t){return t&&t.__esModule?t.default:t}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},i={},r=e.parcelRequire1134;null==r&&((r=function(t){if(t in n)return n[t].exports;if(t in i){var e=i[t];delete i[t];var r={id:t,exports:{}};return n[t]=r,e.call(r.exports,r,r.exports),r.exports}var s=new Error("Cannot find module '"+t+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(t,e){i[t]=e},e.parcelRequire1134=r);var s=r("7q8W2");r("jQEWr"),r("7DS8N"),r("d4uC3"),r("bQ3bh");s=r("7q8W2");var a=r("7DS8N"),o=r("3H7OR");function c(t){const e=JSON.parse(localStorage.getItem(o.GENRES_KEY));return t.map((({id:t,poster_path:n,release_date:i,title:r,genre_ids:o,vote_average:c})=>{const l=(0,s.validateGenres)(o,e),d=`https://image.tmdb.org/t/p/original/${n}`;let u="";return u="undefind"===i?"Date unknown":i.split("-")[0],`<li class="card-item item" data-id="${t}">\n            <img class="film-poster" src="https://image.tmdb.org/t/p/original/${d}" alt="${r} poster" />\n            <div class="overlay">\n              <div class="film-info">\n                <p class="film-title">${r}</p>\n                <div class="film-details">\n                  <span class="film-description">${l} | ${u}</span>\n                  <div class="stars-container">${(0,a.default)({voteAverage:c,isHero:!1})}</div>\n                </div>\n              </div>\n            </div>\n          </li>`})).join("")}function l(t,e){t&&(t.innerHTML=e)}var d=r("50Kfe"),u=r("dyriS");var p=r("960Ad"),m=r("5I7dC");window.addEventListener("DOMContentLoaded",f),window.addEventListener("resize",t(d)(f,200));const v=document.querySelector(".cards-list"),g=document.querySelector(".listListener"),_=new class{constructor(){this.prevAmount=null,this.currentAmount=null}setCurrentAmount(){const t=window.innerWidth;this.setPrevAmount(),this.currentAmount=t<768?1:3}setPrevAmount(){this.prevAmount=this.currentAmount}};async function f(){if(_.setCurrentAmount(),_.prevAmount===_.currentAmount)return;const t=_.currentAmount;try{const{data:e}=await(0,p.getTrendyFilms)(),n=c(e.results.slice(0,t));l(v,n),g.addEventListener("click",(t=>{const e=t.target.closest(".card-item").getAttribute("data-id");(0,m.openModalAboutFilm)(e)}))}catch(t){(0,u.onError)(t)}}d=r("50Kfe");var h=r("2shzp");o=r("3H7OR");const w=h.default.create({baseURL:"https://api.themoviedb.org/3/movie/upcoming",headers:{Authorization:`Bearer ${o.API_BAERER}`}});async function A(){return(await w.get()).data.results}var b=r("9CwBA");o=r("3H7OR"),s=r("7q8W2");function y(t){const{backdrop_path:e,poster_path:n,title:i,release_date:r,popularity:a,vote_count:c,vote_average:l,genre_ids:d,overview:u,id:p}=t,m=(0,b.findFilmAtStorage)(o.STORAGE_KEY,p),v=m?"remove":"add",g=m?"Remove from my library":"Add to my library";return`\n        <div class='upcoming-card__figure'>\n          <div class='upcoming-card__layout'></div>\n            <img\n              src="https://image.tmdb.org/t/p/original${window.screen.width<768?n:e}"\n              alt="${i}"\n              loading='lazy'\n              class='upcoming-card__img'\n            > \n          </div>\n        </div>\n        <div class='upcoming-card__body'>\n          <h3 class="upcoming-card__title">${i}</h3>\n          <div class='metrics-list__main-container'>\n            <ul class="list metrics-list">\n              <li class="metrics-list__item">\n                <p class="metrics-text">Release date</p>\n                <p class="metrics-text metrics-text--date">${r.replaceAll("-",".")}</p>\n              </li>\n              <li class="metrics-list__item">\n                <p class="metrics-text">Vote / Votes</p>\n                <p class="metrics-text metrics-text--vote">\n                  <span class="vote-wrapper">${l}</span>\n                  /\n                  <span class="vote-wrapper">${c}</span>\n                </p>\n              </li>\n              <li class="metrics-list__item">\n                <p class="metrics-text">Popularity</p>\n                <p class="metrics-text">${(0,b.roundToTen)(a)}</p>\n              </li>\n              <li class="metrics-list__item">\n                <p class="metrics-text">Genre</p>\n                <p class="metrics-text">${(0,s.validateGenres)(d,JSON.parse(localStorage.getItem("genres")))}</p>\n              </li>\n            </ul>\n          </div>\n          <h4 class="upcoming-card__subtitle metrics-text">ABOUT</h4>\n            <p class="upcoming-card__text">${u}</p>\n          <button class="btn" type="button" data-id=${p} data-${v}>${g}</button>\n        </div>`}function $({poster_path:t,backdrop_path:e,title:n}){window.matchMedia("(max-width: 767px)");const i=document.querySelector(".upcoming-card__img");if(!i)return console.log("no upcoming section");const r=`https://image.tmdb.org/t/p/original${t}`,s=`https://image.tmdb.org/t/p/original${e}`;return window.screen.width<768&&i.src!==r?i.src=r:window.screen.width>=768&&i.src!==s?i.src=s:void 0}b=r("9CwBA");const x=document.querySelector(".upcoming-card");window.addEventListener("DOMContentLoaded",(async function(){try{const e=await A(),n=(0,b.getRandomItem)(e);!function(t=""){x.innerHTML=t}(y(n));const i=t(d)((()=>$(n)),200);window.addEventListener("resize",i)}catch(t){console.error("error:",t)}})),r("do66J"),r("haKcb"),r("3AqJ6"),(0,s.getGenres)();
//# sourceMappingURL=index.84a8bd9c.js.map
